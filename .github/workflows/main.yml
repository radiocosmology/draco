name: draco-ci-build
on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:

  lint-code:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install apt dependencies
      run: |
        sudo apt-get install -y libopenmpi-dev openmpi-bin

    - name: Install pip dependencies
      run: |
        pip install black ruff

    - name: Run ruff
      run: ruff check .

    - name: Check code with black
      run: black --check .

  run-tests:

    strategy:
      matrix:
        python-version: ["3.10", "3.13"]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev openmpi-bin libhdf5-serial-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install pip dependencies
      run: |
        pip install -e .
        pip install -e .[test]

    - name: Run serial tests
      run: pytest -x test/

    - name: Run parallel tests
      run: |
        mpirun -np 4 --oversubscribe pytest -x -m mpi test/

    - name: Run caput linter on example configs
      run: |
        caput-pipeline lint examples/*.yaml
        caput-pipeline lint doc/pipeline_params.yaml

  build-docs:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenmpi-dev openmpi-bin

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install pip dependencies
      run: |
        pip install -e .
        pip install -e .[docs]

    - name: Build sphinx docs
      run: sphinx-build -W -b html doc/ doc/_build/html
